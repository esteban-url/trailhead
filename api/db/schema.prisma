// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

enum TenantUserRole {
  ADMIN
  MEMBER
  OWNER
  REQUESTED
  SUPERADMIN
}

model Tenant {
  id            String         @id() @default(uuid())
  slug          String         @unique
  name          String
  members       TenantUser[]
  announcements Announcement[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model TenantUser {
  id        String         @id() @default(uuid())
  userId    String
  tenantId  String
  user      User           @relation(fields: [userId], references: [id])
  tenant    Tenant         @relation(fields: [tenantId], references: [id])
  role      TenantUserRole @default(REQUESTED)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@unique([userId, tenantId])
}

model User {
  id           String         @id() @default(uuid())
  email        String         @unique
  name         String
  tenants      TenantUser[]
  Announcement Announcement[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Announcement {
  id        String   @id() @default(uuid())
  tenantId  String
  userId    String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
}
